version: "2.0"
services:
  mysql1:
    container_name: mysql1
    image: mysql:8.0.30
    ports: 
      - "13306:3306"
    volumes:
      - ./conf/mysql/mysql1:/etc/mysql/conf.d
      - ./bin/mysql/mysql1:/docker-entrypoint-initdb.d
      - ./conf/mysql/mysql1/data:/var/lib/mysql
    networks:
      - backend
    environment:
      - MYSQL_ROOT_PASSWORD=root
    mem_limit: 2g
    cpus: 1.5

  # mysql2:
  #   container_name: mysql2
  #   image: mysql:8.0.30
  #   ports: 
  #     - "13307:3306"
  #   volumes:
  #     - ./conf/mysql/mysql2:/etc/mysql/conf.d
  #     - ./bin/mysql/mysql2:/docker-entrypoint-initdb.d
  #     - ./conf/mysql/mysql2/data:/var/lib/mysql
  #   networks:
  #     - backend
  #   depends_on:
  #     - mysql1
  #   environment:
  #     - MYSQL_ROOT_PASSWORD=root
  #   mem_limit: 1g
  #   cpus: 1.0
  # mysql3:
  #   container_name: mysql3
  #   image: mysql:8.0.30
  #   ports: 
  #     - "13308:3306"
  #   volumes:
  #     - ./conf/mysql/mysql3:/etc/mysql/conf.d
  #     - ./bin/mysql/mysql3:/docker-entrypoint-initdb.d
  #     - ./conf/mysql/mysql3/data:/var/lib/mysql
  #   networks:
  #     - backend
  #   depends_on:
  #     - mysql1
  #   environment:
  #     - MYSQL_ROOT_PASSWORD=root
  #   mem_limit: 1g
  #   cpus: 1.0
  proxysql:
    container_name: proxysql
    build:
      context: .
      dockerfile: Dockerfile.proxysql
    ports:
      - "16033:6033"
      - "16032:6032"
      - "6080:6080"  # Interface web
    environment:
      - PROXYSQL_WEB=true
      - PROXYSQL_WEB_PORT=6080
      - PROXYSQL_WEB_IF=0.0.0.0
    volumes:
      - ./conf/proxysql:/docker-entrypoint-initdb.d/
    depends_on:
      - mysql1
      - mysql2
      - mysql3
    networks:
      - backend
    mem_limit: 1g
    cpus: 1.0

  proxysql-web:
    container_name: proxyweb
    image: proxyweb/proxyweb:latest
    ports:
      - "5000:5000"
    depends_on:
      - proxysql
    networks:
      - backend
    mem_limit: 256m
    cpus: 0.25
  
  exporter:
    container_name: exporter
    image: prom/mysqld-exporter:main
    ports:
      - "9104:9104"
    depends_on:
      - mysql1
    networks:
      - backend
    volumes:
      - ./exporter/config.my-cnf:/cfg/config.my-cnf
    command: --config.my-cnf=/cfg/config.my-cnf
    mem_limit: 256m
    cpus: 0.25

  prometheus:
    container_name: prometheus
    image: prom/prometheus
    ports:
      - "9090:9090"
    depends_on:
      - exporter
    networks:
      - backend
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./prometheus/data:/prometheus
    mem_limit: 1.5g
    cpus: 1.0
  
  grafana:
    container_name: grafana
    image: grafana/grafana-enterprise
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
    networks:
      - backend
    volumes:
     - ./grafana/data:/var/lib/grafana
     - ./grafana/provisioning:/etc/grafana/provisioning
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_SECURITY_ADMIN_USER=admin
    mem_limit: 1g
    cpus: 0.5

  web:
    image: nginx:latest
    container_name: nginx
    networks:
      - backend
    depends_on:
      - api
    ports:
      - "8080:80"
    volumes:
      - ./simple-api:/var/www/html
      - ./simple-api/nginx/site.conf:/etc/nginx/conf.d/default.conf
    mem_limit: 512m
    cpus: 0.5

  api:
    container_name: api
    build:
      context: .
      dockerfile: ./simple-api/Dockerfile.php
    networks:
      - backend
    environment:
      docker: "true"
    volumes:
      - ./simple-api:/var/www/html
      - ./simple-api/logs:/var/www/html/logs
    mem_limit: 1g
    cpus: 1.0

networks:
  backend: